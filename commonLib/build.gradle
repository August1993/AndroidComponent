plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
    id 'signing'
}

def GroupId = 'intbird.soft.gradle'
def ArtifactId = 'maven-publish'
def Version = '1.0.0'

def userName = "admin"
def passWord = "123456"

afterEvaluate {
    publishing {
        publications {

            release(MavenPublication) {
                from components.release
                groupId = GroupId
                artifactId = ArtifactId
                version = Version
                pom {
                    name = "SimpleLibPom"
                    description = "Simple Lib Project Pom."
                    url = 'http://intbird.net'
                }
            }
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug
                groupId = GroupId
                artifactId = ArtifactId
                version = Version
            }
        }
        repositories {
            maven {
                allowInsecureProtocol(true)
                def releasesRepoUrl = "http://172.16.66.172:8081/repository/maven-releases/"
                def snapshotsRepoUrl = "http://172.16.66.172:8081/repository/maven-snapshots/"
                url = "http://localhost:8081/repository/kujiang1-hosted/"
                credentials {
                    username = userName
                    password = passWord
                }
            }
        }
    }
}





//def GroupId = 'com.mao.testmavenpush'
//def ArtifactId = 'maven-push-test'
//def Version = '1.0.1'
//def userName = "admin"
//def passWord = "123456"
//def releasesRepoUrl = "http://localhost:8081/repository/kujiang1-hosted/"
//task generateSourcesJar(type:Jar){
//    from android.sourceSets.main.java.srcDirs
//    classifier "sources"
//}
//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                groupId = GroupId//公司域名
//                artifactId = ArtifactId//该aar包的名称
//                version = Version//版本号
//                // 必须有这个 否则不会上传AAR包
//                afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
//                // 多渠道，可以自行指定aar路径
//                // def projectName = project.getName()
//                // artifact "build/outputs/aar/${projectName}-release.aar"
//                // 上传source，这样使用方可以看到方法注释
//                artifact generateSourcesJar
//
//
////                pom.withXml {
////                    def dependenciesNode = asNode().appendNode("dependencies")
////                    configurations.implementation.allDependencies.forEach() {
////                        Dependency dependency ->
////                            if (dependency.version != "unspecified" && dependency.name != "unspecified") {
////                                def dependencyNode = dependenciesNode.appendNode('dependency')
////                                dependencyNode.appendNode('groupId', dependency.group)
////                                dependencyNode.appendNode('artifactId', dependency.name)
////                                dependencyNode.appendNode('version', dependency.version)
////                            }
////                    }
////                }
//
//                pom {
//                    name = "SimpleLibPom"
//                    description = "Simple Lib Project Pom."
//                    url = 'http://intbird.net'
//                }
//
//
//            }
//        }
//        //仓库地址配置
//        repositories {
//            maven {
//                allowInsecureProtocol = true
//                url = releasesRepoUrl
//                credentials {
//                    username = userName
//                    password = passWord
//                }
//            }
//        }
//    }
//}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdk 30

    defaultConfig {
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        multiDexEnabled true
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api project(path: ':commonLib:titlebar')
    api project(path: ':ideahttp')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    api 'com.android.support:multidex:1.0.1'
    api('androidx.work:work-runtime-ktx:2.6.0') { exclude group: 'com.google.guava' }
//    api 'com.trello.rxlifecycle4:rxlifecycle:4.0.2'
//    api 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.2'
//    api 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle-kotlin:4.0.2'
//    api 'com.github.liujingxing.rxlife:rxlife-rxjava3:2.2.1'

    api 'com.apkfuns.logutils:library:1.7.5'
    api 'com.github.Vincent7Wong:EasyNavigation:2.0.5'
    implementation 'me.jessyan:autosize:1.2.1'

    api Libs.core_ktx
    api Libs.arouter
    kapt Libs.kapt_arouter
    api Libs.androidX_appcompat
    api Libs.material
    api Libs.paging
    api Libs.ktx_viewModel
    api Libs.ktx_liveData
    api Libs.ktx_lifeCycle

    api Libs.retrofit
    api Libs.scalars
    api Libs.gson_converter
    api Libs.okhttp

    api Libs.glide
    api Libs.glide_compiler
}